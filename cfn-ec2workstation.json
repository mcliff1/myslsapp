{  
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Template will build SLS workstation, can be used in all stages has SLS and REACT frameworks installed",
   "Parameters":{  
      "myKeyPair":{  
         "Description":"Amazon EC2 Key Pair",
         "Type":"AWS::EC2::KeyPair::KeyName"
      },
      "myDomain":{  
         "Description":"(optional) Domain to add the sls-${region}",
         "Type":"String",
         "Default":"nodomainname"
      }
   },
   "Conditions":{  
      "CreateDnsResources":{  
         "Fn::Not":[  
            {  
               "Fn::Equals":[  
                  {  
                     "Ref":"myDomain"
                  },
                  "nodomainname"
               ]
            }
         ]
      }
   },
   "Resources":{  
      "EC2Instance":{  
         "Type":"AWS::EC2::Instance",
         "Properties":{  
            "ImageId":{  
               "Fn::FindInMap":[  
                  "AWSRegionArch2AMI",
                  {  
                     "Ref":"AWS::Region"
                  },
                  "HVM64"
               ]
            },
            "KeyName":{  
               "Ref":"myKeyPair"
            },
            "InstanceType":"t2.micro",
            "IamInstanceProfile":{  
               "Ref":"InstanceRole"
            },
            "SecurityGroups":[  
               {  
                  "Ref":"SG"
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":"SLS Workstation"
               },
               {  
                  "Key":"Created",
                  "Value":"CFN github aws/cgn-ec2workstation.json"
               }
            ],
            "UserData":{  
               "Fn::Base64":{  
                  "Fn::Join":[  
                     "",
                     [  
                        "#!/bin/bash",
                        "\n",
                        "yum update -y",
                        "\n",
                        "yum install -y git docker tmux jq",
                        "\n",
                        "curl https://bootstrap.pypa.io/get-pip.py | /usr/bin/python2.7",
                        "\n",
                        "curl https://rpm.nodesource.com/setup_8.x | bash -",
                        "\n",
                        "yum install -y nodejs",
                        "\n",
                        "npm install -g serverless",
                        "\n",
                        "npm install -g yarn",
                        "\n",
                        "npm install -g aws-amplify",
                        "\n",
                        "npm install -g create-react-app",
                        "\n",
                        "pip install -q pylint",
                        "\n",
                        "date > bootstrap.log",
                        "\n"
                     ]
                  ]
               }
            }
         }
      },
      "SLSRole":{  
         "Type":"AWS::IAM::Role",
         "Properties":{  
            "AssumeRolePolicyDocument":{  
               "Version":"2012-10-17",
               "Statement":[  
                  {  
                     "Effect":"Allow",
                     "Principal":{  
                        "Service":[  
                           "ec2.amazonaws.com"
                        ]
                     },
                     "Action":[  
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Path":"/",
            "Policies":[  
               {  
                  "PolicyName":"sls-iam-instance-policy",
                  "PolicyDocument":{  
                     "Version":"2012-10-17",
                     "Statement":[  
                        {  
                           "Action":[  
                              "route53:ChangeResourceRecordSets",
                              "cloudformation:*"
                           ],
                           "Resource":"*",
                           "Effect":"Allow"
                        }
                     ]
                  }
               }
            ]
         }
      },
      "InstanceRole":{  
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{  
            "Path":"/",
            "Roles":[  
               {  
                  "Ref":"SLSRole"
               }
            ]
         }
      },
      "SG":{  
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{  
            "GroupDescription":"SLS Workstation CFN generated group",
            "SecurityGroupIngress":[  
               {  
                  "Description":"Access to SSH",
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "CidrIp":"0.0.0.0/0"
               },
               {  
                  "Description":"REACT dev port",
                  "IpProtocol":"tcp",
                  "FromPort":"3000",
                  "ToPort":"3000",
                  "CidrIp":"0.0.0.0/0"
               },
               {  
                  "Description":"http test port",
                  "IpProtocol":"tcp",
                  "FromPort":"8000",
                  "ToPort":"8000",
                  "CidrIp":"0.0.0.0/0"
               }
            ],
            "Tags":[  
               {  
                  "Key":"Name",
                  "Value":"SLS Workstation"
               },
               {  
                  "Key":"Created",
                  "Value":"CFN github aws/cgn-ec2workstation.json"
               }
            ]
         }
      },
      "DnsRecord":{  
         "Type":"AWS::Route53::RecordSet",
         "Condition":"CreateDnsResources",
         "Properties":{  
            "Comment":"ec2-sls  workstation nstance",
            "Type":"A",
            "TTL":"900",
            "HostedZoneName":{  
               "Fn::Join":[  
                  "",
                  [  
                     {  
                        "Ref":"myDomain"
                     },
                     "."
                  ]
               ]
            },
            "Name":{  
               "Fn::Join":[  
                  "",
                  [  
                     "sls",
                     "-",
                     {  
                        "Ref":"AWS::Region"
                     },
                     ".",
                     {  
                        "Ref":"myDomain"
                     },
                     "."
                  ]
               ]
            },
            "ResourceRecords":[  
               {  
                  "Fn::GetAtt":[  
                     "EC2Instance",
                     "PublicIp"
                  ]
               }
            ]
         }
      }
   },
   "Mappings":{  
      "AWSRegionArch2AMI":{  
         "us-east-1":{  
            "HVM64":"ami-97785bed"
         },
         "us-west-2":{  
            "HVM64":"ami-f2d3638a"
         },
         "us-west-1":{  
            "HVM64":"ami-824c4ee2"
         },
         "eu-west-1":{  
            "HVM64":"ami-d834aba1"
         },
         "eu-west-2":{  
            "HVM64":"ami-403e2524"
         },
         "eu-west-3":{  
            "HVM64":"ami-8ee056f3"
         },
         "eu-central-1":{  
            "HVM64":"ami-5652ce39"
         },
         "ap-northeast-1":{  
            "HVM64":"ami-ceafcba8"
         },
         "ap-northeast-2":{  
            "HVM64":"ami-863090e8"
         },
         "ap-northeast-3":{  
            "HVM64":"ami-83444afe"
         },
         "ap-southeast-1":{  
            "HVM64":"ami-68097514"
         },
         "ap-southeast-2":{  
            "HVM64":"ami-942dd1f6"
         },
         "ap-south-1":{  
            "HVM64":"ami-531a4c3c"
         },
         "us-east-2":{  
            "HVM64":"ami-f63b1193"
         },
         "ca-central-1":{  
            "HVM64":"ami-a954d1cd"
         },
         "sa-east-1":{  
            "HVM64":"ami-84175ae8"
         },
         "cn-north-1":{  
            "HVM64":"ami-cb19c4a6"
         },
         "cn-northwest-1":{  
            "HVM64":"ami-3e60745c"
         }
      }
   }
}
