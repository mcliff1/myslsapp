# For full config options, check the docs:
#    docs.serverless.com
service: pollyapi


# used for readability
custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  basestack: ${opt:basestack, 'pollybase'}

  pollydb: ${ssm:/${self:custom.basestack}/pollyDB}
  audiobucket: ${ssm:/${self:custom.basestack}/audioBucketName}
  newpoststopic: ${ssm:/${self:custom.basestack}/newPostsTopic}
  domainname: ${ssm:/${self:custom.basestack}/domainName}
  hostname: ${ssm:/${self:custom.basestack}/apiHostName}
  acmarn: ${ssm:/${self:custom.basestack}/apiAcmArn}


provider:
  name: aws
  runtime: python3.6

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1


  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        "Fn::Join":
          - ""
          -
            - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":table/"
            - ${self:custom.pollydb}
            - "*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:GetBucketLocation
      Resource:
        "Fn::Join":
          - ""
          -
            - "arn:aws:s3:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":"
            - ${self:custom.audiobucket}
            - "*"
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        "Fn::Join":
          - ""
          -
            - "arn:aws:sns:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":"
            - ${self:custom.newpoststopic}
            - "*"
    - Effect: Allow
      Action:
        - polly:SynthesizeSpeech
      Resource: "*"

  environment:
    STAGE: ${self:custom.stage}
    DB_TABLE_NAME: ${self:custom.pollydb}
    SNS_TOPIC: ${self:custom.pollydb}

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  pollyapi:
    handler: handler.apihandler
    tags:
      created: serverless.yaml from polly project
      Name: handles API calls for Polly UI
    events:
      - http:
          path: /
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
            allowCredentials: false

      - http:
          path: /
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Origin
            allowCredentials: false

functions:
  convertaudio:
    handler: convert_audio.lambda_handler
    tags:
      created: serverless.yaml from polly project
      Name: Lambda function to convert text to audio
    events:
      - sns: ${self:custom.newpoststopic}


resources:
  Resources:
    ApiGatewayDomain:
      Type: 'AWS::ApiGateway::DomainName'
      Properties:
        DomainName: ${self:custom.hostname}.${self:custom.domainname}
        CertificateArn: ${self:custom.acmarn}

    ApiGatewayMapping:
      Type: 'AWS::ApiGateway::BasePathMapping'
      DependsOn: ApiGatewayDomain
      Properties:
        DomainName: { "Ref" : ApiGatewayDomain }
        RestApiId: { "Ref" : ApiGatewayRestApi }

    ApiGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      DependsOn: ApiGatewayDomain
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId: { "Ref" : ApiGatewayRestApi }

    MyDNSRecord:
      Type: 'AWS::Route53::RecordSetGroup'
      DependsOn: ApiGatewayDomain
      Properties:
        HostedZoneName: { "Fn::Sub" : "${self:custom.domainname}." }
        RecordSets:
          - Type: A
            Name: ${self:custom.hostname}.${self:custom.domainname}
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2   # hardcoded for all cloudfront
              DNSName: { "Fn::GetAtt" : ApiGatewayDomain.DistributionDomainName }

  Outputs:
    ExportServiceEndpoint:
      Description: "URL Endpoint for the REST Service"
      Value:
        "Fn::Join":
          - ""
          -
            - "https://"
            - Ref: "ApiGatewayRestApi"
            - ".execute-api."
            - Ref: "AWS::Region"
            - ".amazonaws.com/"
            - ${self:custom.stage}
      Export:
        Name: TMSCustomerServiceEndpoint
